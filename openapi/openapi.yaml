# -----------------------------------------------------------------------------
# openapi/openapi.yaml
# -----------------------------------------------------------------------------
openapi: 3.0.2
info:
  version:        1.0.0
  title:          Example.com
  termsOfService: 'https://example.com/terms/'
  contact:
    email:  contact@example.com
    url:    'http://example.com/contact'
  license:
    name:   Apache 2.0
    url:    'http://www.apache.org/licenses/LICENSE-2.0.html'
  x-logo:
    url:    'https://redocly.github.io/openapi-template/logo.png'
  description: >
    Protoype BaaS APIs for starting ConNext Bank APIs. The prototype contains
    the Consumer, Business, Accounts, Transactions, and Card APIs.
externalDocs:
  description: Find out how to create a GitHub repo for your OpenAPI definition.
  url: 'https://github.com/Rebilly/generator-openapi-repo'
servers:
  - url: 'http://example.com/api/v1'
  - url: 'https://example.com/api/v1'
tags:
  - name:         Consumer
    description:  Consumer resource APIs
  - name:         Consumer Address
    description:  Consumer Address resource APIs
  - name:         Consumer Contacts
    description:  Consumer Contact resource APIs
  - name:         Consumer Documents
    description:  Consumer Identity Document APIs
  - name:         Business
    description:  Business resource APIs
  - name:         Business Addresses
    description:  Business Addresses resource APIs
  - name:         Business Members
    description:  Business Members resource APIs
  - name:         Business Contacts
    description:  Business Contacts resource APIs
  - name:         Account
    description:  Bank Account resource APIs
  - name:         Account Participants
    description:  Account Particpants resource APIs
  - name:         Account Blocks
    description:  Account Blocks resource APIs
  - name:         Account Statements
    description:  Account Statements resource APIs
  - name:         Transaction
    description:  Transactions for a bank account APIs
paths:
  /consumers:
    $ref: './paths/consumers/consumers.openapi.yaml'
  /consumers/{consumerId}:
    $ref: './paths/consumers/consumers-by-id.openapi.yaml'
  /consumers/{consumerId}/addresses:
    $ref: './paths/consumers/addresses/addresses.openapi.yaml'
  /consumers/{consumerId}/addresses/{addressId}:
    $ref: './paths/consumers/addresses/addresses-by-id.openapi.yaml'
  /consumers/{consumerId}/contacts:
    $ref: './paths/consumers/contacts/contacts.openapi.yaml'
  /consumers/{consumerId}/contacts/{contactId}:
    $ref: './paths/consumers/contacts/contacts-by-id.openapi.yaml'
  /consumers/{consumerId}/documents:
    $ref: './paths/consumers/documents/documents.openapi.yaml'
  /businesses:
    $ref: './paths/businesses/businesses.openapi.yaml'
  /businesses/{businessId}:
    $ref: './paths/businesses/businesses-by-id.openapi.yaml'
  /businesses/{businessId}/addresses:
    $ref: './paths/businesses/addresses/addresses.openapi.yaml'
  /businesses/{businessId}/addresses/{addressId}:
    $ref: './paths/businesses/addresses/addresses-by-id.openapi.yaml'
  /businesses/{businessId}/members:
    $ref: './paths/businesses/members/members.openapi.yaml'
  /businesses/{businessId}/contacts:
    $ref: './paths/businesses/contacts/contacts.openapi.yaml'
  /businesses/{businessId}/contacts/{contactId}:
    $ref: './paths/businesses/contacts/contacts-by-id.openapi.yaml'
  /accounts:
    $ref: './paths/accounts/accounts.openapi.yaml'
  /accounts/{accountId}:
    $ref: './paths/accounts/accounts-by-id.openapi.yaml'
  /accounts/{accountId}/participants:
    $ref: './paths/accounts/participants/participants.openapi.yaml'
  /accounts/{accountId}/participants/{participantId}:
    $ref: './paths/accounts/participants/participants-by-id.openapi.yaml'
  /accounts/{accountId}/blocks:
    $ref: './paths/accounts/blocks/blocks.openapi.yaml'
  /accounts/{accountId}/blocks/{blockId}:
    $ref: './paths/accounts/blocks/blocks-by-id.openapi.yaml'
  /accounts/{accountId}/statements:
    $ref: './paths/accounts/statements/statements.openapi.yaml'
  /accounts/{accountId}/statements/{statementId}:
    $ref: './paths/accounts/statements/statements-by-id.openapi.yaml'
components:
  securitySchemes:
    main_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://example.com/api/oauth/dialog'
          scopes:
            'read:users': read users info
            'write:users': modify or remove users
    api_key:
      type: apiKey
      in: header
      name: api_key
    basic_auth:
      type: http
      scheme: basic
