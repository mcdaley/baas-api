# -----------------------------------------------------------------------------
# openapi/paths/consumers/consumers-by-id.openapi.yaml
# -----------------------------------------------------------------------------

# GET /consumers/{consumerId}
get:
  tags:
    - Consumer
  summary:      Retrieves a consumer details.
  description:  >
    Retrieves the consumer details by passing in the Consumer UUID.
  parameters:
    - $ref: '../../components/parameters/consumerId.param.yaml'
    - $ref: '../../components/headers/xRequestId.param.yaml'
  responses:
    '200':
      description: 'OK'
      content:
        application/json:
          schema:
            properties:
              consumer:
                $ref: '../../components/schemas/consumer/consumer.schema.yaml'
    '400':
      $ref: '../../components/responses/400.bad-request.response.yaml'
    '401':
      $ref: '../../components/responses/401.unauthorized.response.yaml'
    '403':
      $ref: '../../components/responses/403.forbidden.response.yaml'
    '404':
      $ref: '../../components/responses/404.not-found.response.yaml'
    '500':
      $ref: '../../components/responses/500.server-error.response.yaml'

# PATCH /consumers/{consumerId}
patch:
  tags:
    - Consumer
  summary:      Updates an existing consumer
  description:  Updates an existing consumer
  parameters:
    - $ref: '../../components/parameters/consumerId.param.yaml'
    - $ref: '../../components/headers/xRequestId.param.yaml'
  requestBody:
    content:
      application/json:
        schema:
          $ref: '../../components/schemas/consumer/new-consumer.schema.yaml'
    description: Consumer fields to update.
  responses:
    '200':
      description: "OK"
      content:
        application/json:
          schema:
            properties:
              consumer:
                $ref: '../../components/schemas/consumer/consumer.schema.yaml'
    '400':
      $ref: '../../components/responses/400.bad-request.response.yaml'
    '401':
      $ref: '../../components/responses/401.unauthorized.response.yaml'
    '403':
      $ref: '../../components/responses/403.forbidden.response.yaml'
    '404':
      $ref: '../../components/responses/404.not-found.response.yaml'
    '500':
      $ref: '../../components/responses/500.server-error.response.yaml'

# DELETE /consumers/{consumerId}
delete:
  tags:
    - Consumer
  summary:      Delete a Consumer
  description:  Deletes a Consumer
  parameters:
    - $ref: '../../components/parameters/consumerId.param.yaml'
    - $ref: '../../components/headers/xRequestId.param.yaml'
  responses:
    '204':
      description: 'OK'
    '400':
      $ref: '../../components/responses/400.bad-request.response.yaml'
    '401':
      $ref: '../../components/responses/401.unauthorized.response.yaml'
    '403':
      $ref: '../../components/responses/403.forbidden.response.yaml'
    '404':
      $ref: '../../components/responses/404.not-found.response.yaml'
    '500':
      $ref: '../../components/responses/500.server-error.response.yaml'